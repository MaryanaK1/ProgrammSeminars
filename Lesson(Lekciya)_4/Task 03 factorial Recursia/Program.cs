// Что такое рекурсия? Это функция, которая вызывает сама себя.
//   Пример факториала: 5! = 5 * 4 * 3 * 2 * 1.
//   Если бы нам нужно было вычислить 120!, мы бы считали произведение чисел от 1 до 120.
//   5! = 5 * 4!
//   4! — это 4 * 3! 

/*
Определим метод как возвращающий int, и в качестве аргумента принимающий другое целое число.
Далее по определению факториала мы явно укажем: «если мы дошли до единицы (n = 1), мы должны
вернуть 1». Почему? Это определение факториала: 1! = 1. Кстати, отметим, что 0! — это тоже 1.
Итак, если n = 1, возвращаем 1. В противном случае берём екущее значение и умножаем на факториал
предыдущего числа (n - 1). Не забываем, что мы должны явно возвращать значение. То есть, если 1,
возвращаем 1. Если не 1, то n * Factorial(n-1) (факториал предыдущего числа). 
*/
// int Factorial(int n)
// {
//  // 1! = 1
//  // 0! = 1
//  if(n == 1) return 1;
//  else return n * Factorial(n-1);
// }
// Console.WriteLine(Factorial(3)); // 1 * 2 * 3 = 6
/*
когда мы будем вычислять большие числа (допустим, 40!),
 в какой-то момент начнём получать отрицательные числа, чего быть не должно
*/
// int Factorial(int n)
// {
//     if(n == 1) return 1;
//     else return n * Factorial(n-1);
// }
// for (int i = 1; i < 40; i++)
//     {
//     Console.WriteLine(Factorial(i));
//     }

// метод, который принимает какой-то аргумент (в частности,
// число) и возвращает факториал этого числа
double Factorial(int n)
{
    if(n == 1) return 1;
    else return n * Factorial(n-1);
}
for (int i = 1; i < 40; i++)
    {
    Console.WriteLine($"{i}! = {Factorial(i)}"); //до какого значения "{i}! =" можем посчитать факториал.

    }